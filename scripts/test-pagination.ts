#!/usr/bin/env tsx

/**
 * –¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ API
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã page-based –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
 */

const API_BASE_URL = 'http://localhost:3000/api'

interface PaginatedResponse {
  items: any[]
  page: number
  totalPages: number
  totalItems: number
  hasNextPage: boolean
  hasPrevPage: boolean
}

async function testPagination() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ API...\n')

  try {
    // –¢–µ—Å—Ç 1: –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    console.log('üìÑ –¢–µ—Å—Ç 1: –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
    const page1Response = await fetch(`${API_BASE_URL}/products?page=1&limit=24`)
    const page1Data: PaginatedResponse = await page1Response.json()
    
    console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page1Data.page}`)
    console.log(`‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${page1Data.items.length}`)
    console.log(`‚úÖ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${page1Data.totalItems}`)
    console.log(`‚úÖ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${page1Data.totalPages}`)
    console.log(`‚úÖ –ï—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è: ${page1Data.hasNextPage}`)
    console.log(`‚úÖ –ï—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∞—è: ${page1Data.hasPrevPage}`)
    console.log('')

    // –¢–µ—Å—Ç 2: –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (page1Data.totalPages > 1) {
      console.log('üìÑ –¢–µ—Å—Ç 2: –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
      const page2Response = await fetch(`${API_BASE_URL}/products?page=2&limit=24`)
      const page2Data: PaginatedResponse = await page2Response.json()
      
      console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page2Data.page}`)
      console.log(`‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${page2Data.items.length}`)
      console.log(`‚úÖ –ï—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è: ${page2Data.hasNextPage}`)
      console.log(`‚úÖ –ï—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∞—è: ${page2Data.hasPrevPage}`)
      console.log('')
    }

    // –¢–µ—Å—Ç 3: –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if (page1Data.totalPages > 2) {
      console.log('üìÑ –¢–µ—Å—Ç 3: –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
      const lastPageResponse = await fetch(`${API_BASE_URL}/products?page=${page1Data.totalPages}&limit=24`)
      const lastPageData: PaginatedResponse = await lastPageResponse.json()
      
      console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${lastPageData.page}`)
      console.log(`‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${lastPageData.items.length}`)
      console.log(`‚úÖ –ï—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è: ${lastPageData.hasNextPage}`)
      console.log(`‚úÖ –ï—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∞—è: ${lastPageData.hasPrevPage}`)
      console.log('')
    }

    // –¢–µ—Å—Ç 4: –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    console.log('üìÑ –¢–µ—Å—Ç 4: –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
    const invalidPageResponse = await fetch(`${API_BASE_URL}/products?page=999&limit=24`)
    const invalidPageData: PaginatedResponse = await invalidPageResponse.json()
    
    console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${invalidPageData.page}`)
    console.log(`‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${invalidPageData.items.length}`)
    console.log(`‚úÖ –ï—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è: ${invalidPageData.hasNextPage}`)
    console.log(`‚úÖ –ï—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∞—è: ${invalidPageData.hasPrevPage}`)
    console.log('')

    // –¢–µ—Å—Ç 5: –†–∞–∑–Ω—ã–µ –ª–∏–º–∏—Ç—ã
    console.log('üìÑ –¢–µ—Å—Ç 5: –†–∞–∑–Ω—ã–µ –ª–∏–º–∏—Ç—ã')
    const limit5Response = await fetch(`${API_BASE_URL}/products?page=1&limit=5`)
    const limit5Data: PaginatedResponse = await limit5Response.json()
    
    console.log(`‚úÖ –õ–∏–º–∏—Ç 5: —Ç–æ–≤–∞—Ä–æ–≤ ${limit5Data.items.length}, —Å—Ç—Ä–∞–Ω–∏—Ü ${limit5Data.totalPages}`)
    
    const limit50Response = await fetch(`${API_BASE_URL}/products?page=1&limit=50`)
    const limit50Data: PaginatedResponse = await limit50Response.json()
    
    console.log(`‚úÖ –õ–∏–º–∏—Ç 50: —Ç–æ–≤–∞—Ä–æ–≤ ${limit50Data.items.length}, —Å—Ç—Ä–∞–Ω–∏—Ü ${limit50Data.totalPages}`)
    console.log('')

    // –¢–µ—Å—Ç 6: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    console.log('üìÑ –¢–µ—Å—Ç 6: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å')
    const startTime = Date.now()
    const perfResponse = await fetch(`${API_BASE_URL}/products?page=1&limit=24`)
    const perfData: PaginatedResponse = await perfResponse.json()
    const endTime = Date.now()
    
    console.log(`‚úÖ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${endTime - startTime}ms`)
    console.log(`‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: ${perfData.items.length}`)
    console.log('')

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  testPagination()
}

export { testPagination }