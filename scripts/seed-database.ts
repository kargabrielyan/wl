import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function seedDatabase() {
  try {
    console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')

    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    await prisma.orderItem.deleteMany()
    await prisma.order.deleteMany()
    await prisma.wishlist.deleteMany()
    await prisma.product.deleteMany()
    await prisma.category.deleteMany()
    await prisma.deliveryType.deleteMany()
    await prisma.settings.deleteMany()
    await prisma.user.deleteMany()

    console.log('üßπ –û—á–∏—Å—Ç–∏–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ')

    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await prisma.category.createMany({
      data: [
        { name: '‘Ω’°’≤’°’¨’´÷Ñ’∂’•÷Ä', slug: 'toys', description: '’Ñ’°’∂’Ø’°’Ø’°’∂ ’≠’°’≤’°’¨’´÷Ñ’∂’•÷Ä' },
        { name: '’Ä’°’£’∏÷Ç’Ω’ø', slug: 'clothing', description: '’Ñ’°’∂’Ø’°’Ø’°’∂ ’∞’°’£’∏÷Ç’Ω’ø' },
        { name: '‘≥÷Ä÷Ñ’•÷Ä', slug: 'books', description: '‘µ÷Ä’•’≠’°’∂’•÷Ä’´ ’£÷Ä÷Ñ’•÷Ä' },
        { name: '’ç’∫’∏÷Ä’ø', slug: 'sports', description: '’ç’∫’∏÷Ä’ø’°’µ’´’∂ ’°÷Ä’ø’°’§÷Ä’°’∂÷Ñ' },
        { name: '’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’∏÷Ç’©’µ’∏÷Ç’∂', slug: 'creativity', description: '’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’°’Ø’°’∂ ’°÷Ä’ø’°’§÷Ä’°’∂÷Ñ' }
      ]
    })

    console.log('üìÇ –°–æ–∑–¥–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')

    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const createdCategories = await prisma.category.findMany()

    // –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    const deliveryTypes = await prisma.deliveryType.createMany({
      data: [
        { name: '‘±÷Ä’°’£ ’°’º’°÷Ñ’∏÷Ç’¥', description: '30 ÷Ä’∏’∫’•’∏÷Ç’¥', price: 0, isActive: true },
        { name: '’ç’ø’°’∂’§’°÷Ä’ø ’°’º’°÷Ñ’∏÷Ç’¥', description: '1-2 ’™’°’¥’∏÷Ç’¥', price: 500, isActive: true },
        { name: '‘ª’∂÷Ñ’∂’°’∞’°’∂’±’∂’∏÷Ç’¥', description: '’Ñ’•÷Ä ’¥’°’Ω’∂’°’≥’µ’∏÷Ç’≤’´÷Å', price: 0, isActive: true }
      ]
    })

    console.log('üöö –°–æ–∑–¥–∞–ª–∏ —Ç–∏–ø—ã –¥–æ—Å—Ç–∞–≤–∫–∏')

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
    const products = [
      {
        name: '‘º’•’£’∏ ’ø’•’≠’∂’´’Ø’°’Ø’°’∂ ’≠’°’≤’°’¨’´÷Ñ',
        description: '‘∂’°÷Ä’£’°÷Å’∂’∏’≤ ’≠’°’≤’°’¨’´÷Ñ 8+ ’ø’°÷Ä’•’Ø’°’∂ ’•÷Ä’•’≠’°’∂’•÷Ä’´ ’∞’°’¥’°÷Ä',
        price: 15000,
        salePrice: 12000,
        ingredients: '’ä’¨’°’Ω’ø’´’Ø, ’¥’•’ø’°’≤’°’Ø’°’∂ ’¥’°’Ω’•÷Ä',
        image: '/images/products/lego.jpg',
        stock: 25,
        status: 'HIT',
        categoryId: createdCategories.find(c => c.name === '‘Ω’°’≤’°’¨’´÷Ñ’∂’•÷Ä')?.id
      },
      {
        name: '’Ñ’°’∂’Ø’°’Ø’°’∂ ’±’¥’•’º’°’µ’´’∂ ’¢’°’≥’Ø’∏’∂',
        description: '’è’°÷Ñ ÷á ’∞’°÷Ä’¥’°÷Ä ’¢’°’≥’Ø’∏’∂ ÷Å’∏÷Ç÷Ä’ø ’•’≤’°’∂’°’Ø’´ ’∞’°’¥’°÷Ä',
        price: 8000,
        ingredients: '100% ’¢’∏÷Ç÷Ä’§, ’Ω’´’∂’©’•’ø’´’Ø ’¨÷Å’∏’∂’∏÷Ç’¥',
        image: '/images/products/jacket.jpg',
        stock: 15,
        status: 'NEW',
        categoryId: createdCategories.find(c => c.name === '’Ä’°’£’∏÷Ç’Ω’ø')?.id
      },
      {
        name: '‘µ÷Ä’•’≠’°’∂’•÷Ä’´ ’∞’•÷Ñ’´’°’©’∂’•÷Ä’´ ’£’´÷Ä÷Ñ',
        description: '‘ø’∏’¨’•’Ø÷Å’´’° ’∞’°’µ’Ø’°’Ø’°’∂ ’∞’•÷Ñ’´’°’©’∂’•÷Ä’´÷Å',
        price: 3000,
        ingredients: '‘π’∏÷Ç’≤’©, ’©’°’∂’°÷Ñ',
        image: '/images/products/book.jpg',
        stock: 50,
        status: 'CLASSIC',
        categoryId: createdCategories.find(c => c.name === '‘≥÷Ä÷Ñ’•÷Ä')?.id
      },
      {
        name: '’ñ’∏÷Ç’ø’¢’∏’¨’´ ’£’∂’§’°’Ø',
        description: '’ä÷Ä’∏÷Ü’•’Ω’´’∏’∂’°’¨ ÷Ü’∏÷Ç’ø’¢’∏’¨’´ ’£’∂’§’°’Ø',
        price: 5000,
        ingredients: '‘ø’°’∑’´, ’Ω’´’∂’©’•’ø’´’Ø ’∂’µ’∏÷Ç’©',
        image: '/images/products/ball.jpg',
        stock: 30,
        status: 'BANNER',
        categoryId: createdCategories.find(c => c.name === '’ç’∫’∏÷Ä’ø')?.id
      },
      {
        name: '’Ü’Ø’°÷Ä’π’°’Ø’°’∂ ’∞’°’æ’°÷Ñ’°’Æ’∏÷Ç',
        description: '‘º÷Ä’´’æ ’∞’°’æ’°÷Ñ’°’Æ’∏÷Ç ’Ω’ø’•’≤’Æ’°’£’∏÷Ä’Æ’°’Ø’°’∂ ’°’∑’≠’°’ø’°’∂÷Ñ’∂’•÷Ä’´ ’∞’°’¥’°÷Ä',
        price: 4000,
        ingredients: '’Ñ’°’ø’´’ø’∂’•÷Ä, ’£’∏÷Ç’∂’°’æ’∏÷Ä ’©’∏÷Ç’≤’©, ’Ø’°’æ',
        image: '/images/products/art.jpg',
        stock: 20,
        status: 'NEW',
        categoryId: createdCategories.find(c => c.name === '’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’∏÷Ç’©’µ’∏÷Ç’∂')?.id
      }
    ]

    for (const product of products) {
      await prisma.product.create({
        data: product
      })
    }

    console.log('üì¶ –°–æ–∑–¥–∞–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã')

    // –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    await prisma.settings.create({
      data: {
        key: 'site_name',
        value: 'Pideh Armenia',
        description: '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞'
      }
    })

    await prisma.settings.create({
      data: {
        key: 'contact_phone',
        value: '+374 95-044-888',
        description: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω'
      }
    })

    await prisma.settings.create({
      data: {
        key: 'contact_email',
        value: 'info@pideh.am',
        description: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π email'
      }
    })

    console.log('‚öôÔ∏è –°–æ–∑–¥–∞–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testUser = await prisma.user.create({
      data: {
        email: 'test@example.com',
        name: '’ì’∏÷Ä’±’°÷Ä’Ø’∏’≤ ÷Ö’£’ø’°’ø’•÷Ä',
        phone: '+374 99-123-456',
        address: '‘µ÷Ä÷á’°’∂, ‘±÷Ä’°’¢’Ø’´÷Ä'
      }
    })

    console.log('üë§ –°–æ–∑–¥–∞–ª–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
    const productsForOrder = await prisma.product.findMany({ take: 2 })
    
    if (productsForOrder.length >= 2) {
      const order = await prisma.order.create({
        data: {
          userId: testUser.id,
          status: 'PENDING',
          total: productsForOrder[0].salePrice || productsForOrder[0].price + productsForOrder[1].salePrice || productsForOrder[1].price,
          deliveryTypeId: (await prisma.deliveryType.findFirst())?.id,
          items: {
            create: [
              {
                productId: productsForOrder[0].id,
                quantity: 1,
                price: productsForOrder[0].salePrice || productsForOrder[0].price
              },
              {
                productId: productsForOrder[1].id,
                quantity: 2,
                price: productsForOrder[1].salePrice || productsForOrder[1].price
              }
            ]
          }
        }
      })

      console.log('üìã –°–æ–∑–¥–∞–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑')
    }

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    if (productsForOrder.length >= 1) {
      await prisma.wishlist.create({
        data: {
          userId: testUser.id,
          productId: productsForOrder[0].id
        }
      })

      console.log('‚ù§Ô∏è –°–æ–∑–¥–∞–ª–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
    }

    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!')
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = {
      categories: await prisma.category.count(),
      products: await prisma.product.count(),
      users: await prisma.user.count(),
      orders: await prisma.order.count(),
      wishlist: await prisma.wishlist.count(),
      deliveryTypes: await prisma.deliveryType.count(),
      settings: await prisma.settings.count()
    }

    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
    console.log(`–ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${stats.categories}`)
    console.log(`–ü—Ä–æ–¥—É–∫—Ç—ã: ${stats.products}`)
    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${stats.users}`)
    console.log(`–ó–∞–∫–∞–∑—ã: ${stats.orders}`)
    console.log(`–ò–∑–±—Ä–∞–Ω–Ω–æ–µ: ${stats.wishlist}`)
    console.log(`–¢–∏–ø—ã –¥–æ—Å—Ç–∞–≤–∫–∏: ${stats.deliveryTypes}`)
    console.log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∏: ${stats.settings}`)

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
  } finally {
    await prisma.$disconnect()
  }
}

seedDatabase()

