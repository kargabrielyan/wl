/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç /images/nophoto.jpg –¥–ª—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */

import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function updateProductsImages() {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤...')

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    const allProducts = await prisma.product.findMany({
      select: {
        id: true,
        name: true,
        image: true
      }
    })

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    const productsWithoutImage = allProducts.filter(product => {
      const image = product.image?.trim() || ''
      return !image || 
             image === 'no-image' || 
             !image.startsWith('/images/')
    })

    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${productsWithoutImage.length}`)

    if (productsWithoutImage.length === 0) {
      console.log('‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —É–∂–µ –∏–º–µ—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!')
      return
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä –æ—Ç–¥–µ–ª—å–Ω–æ
    let updatedCount = 0
    for (const product of productsWithoutImage) {
      await prisma.product.update({
        where: { id: product.id },
        data: {
          image: '/images/nophoto.jpg'
        }
      })
      updatedCount++
      if (updatedCount % 10 === 0) {
        console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount}/${productsWithoutImage.length} —Ç–æ–≤–∞—Ä–æ–≤...`)
      }
    }

    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${updatedCount}`)
    console.log('‚ú® –ì–æ—Ç–æ–≤–æ! –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Ç–µ–ø–µ—Ä—å –∏–º–µ—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ nophoto.jpg')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error)
    throw error
  } finally {
    await prisma.$disconnect()
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
updateProductsImages()
  .then(() => {
    console.log('üéâ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  })

