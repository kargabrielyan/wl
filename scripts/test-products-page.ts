// –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
async function testProductsPage() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π...\n')

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...')
    const healthResponse = await fetch('http://localhost:3000/api/products?page=1&limit=1')
    
    if (!healthResponse.ok) {
      throw new Error(`–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${healthResponse.status}`)
    }
    
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω')
    console.log('')

    // –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    console.log('üìÑ –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤')
    const response1 = await fetch('http://localhost:3000/api/products?page=1&limit=24')
    const data1 = await response1.json()
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${data1.data.length}`)
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${data1.pagination.total}`)
    console.log(`üìÑ –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${data1.pagination.page}`)
    console.log(`üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${data1.pagination.totalPages}`)
    console.log(`‚û°Ô∏è –ï—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è: ${data1.pagination.hasNext}`)
    console.log('')

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    console.log('üìÑ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞')
    if (data1.data.length > 0) {
      const product = data1.data[0]
      console.log(`‚úÖ ID —Ç–æ–≤–∞—Ä–∞: ${product.id}`)
      console.log(`‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: ${product.name}`)
      console.log(`‚úÖ –¶–µ–Ω–∞: ${product.price} ÷è`)
      console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`)
      console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${product.image ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}`)
      console.log(`‚úÖ –í –Ω–∞–ª–∏—á–∏–∏: ${product.stock || 0} —à—Ç.`)
    }
    console.log('')

    // –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (data1.pagination.hasNext) {
      console.log('üìÑ –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã')
      const response2 = await fetch('http://localhost:3000/api/products?page=2&limit=24')
      const data2 = await response2.json()
      
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${data2.data.length}`)
      console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${data2.pagination.total}`)
      console.log(`üìÑ –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${data2.pagination.page}`)
      console.log(`‚û°Ô∏è –ï—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è: ${data2.pagination.hasNext}`)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–≤–∞—Ä—ã —Ä–∞–∑–Ω—ã–µ
      const firstPageIds = data1.data.map(p => p.id)
      const secondPageIds = data2.data.map(p => p.id)
      const hasDuplicates = firstPageIds.some(id => secondPageIds.includes(id))
      console.log(`‚úÖ –¢–æ–≤–∞—Ä—ã –Ω–µ –¥—É–±–ª–∏—Ä—É—é—Ç—Å—è: ${!hasDuplicates}`)
      console.log('')
    }

    // –¢–µ—Å—Ç 4: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('üìÑ –¢–µ—Å—Ç 4: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ò–≥—Ä—É—à–∫–∏"')
    const response3 = await fetch('http://localhost:3000/api/products?category=–ò–≥—Ä—É—à–∫–∏&page=1&limit=24')
    const data3 = await response3.json()
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${data3.data.length}`)
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${data3.pagination.total}`)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ò–≥—Ä—É—à–∫–∏"
    const allToys = data3.data.every(p => p.category?.name === '–ò–≥—Ä—É—à–∫–∏')
    console.log(`‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ò–≥—Ä—É—à–∫–∏": ${allToys}`)
    console.log('')

    // –¢–µ—Å—Ç 5: –ü–æ–∏—Å–∫
    console.log('üìÑ –¢–µ—Å—Ç 5: –ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É "–∏–≥—Ä—É—à–∫–∞"')
    const response4 = await fetch('http://localhost:3000/api/products?search=–∏–≥—Ä—É—à–∫–∞&page=1&limit=24')
    const data4 = await response4.json()
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${data4.data.length}`)
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${data4.pagination.total}`)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    const allMatchSearch = data4.data.every(p => 
      p.name.toLowerCase().includes('–∏–≥—Ä—É—à–∫–∞') ||
      (p.description && p.description.toLowerCase().includes('–∏–≥—Ä—É—à–∫–∞')) ||
      (p.ingredients && p.ingredients.toLowerCase().includes('–∏–≥—Ä—É—à–∫–∞'))
    )
    console.log(`‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ø–æ–∏—Å–∫—É: ${allMatchSearch}`)
    console.log('')

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
    console.log('')
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:')
    console.log(`   ‚Ä¢ API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ page –∏ limit`)
    console.log(`   ‚Ä¢ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏`)
    console.log(`   ‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`)
    console.log(`   ‚Ä¢ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`)
    console.log(`   ‚Ä¢ –¢–æ–≤–∞—Ä—ã –Ω–µ –¥—É–±–ª–∏—Ä—É—é—Ç—Å—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏`)
    console.log('')
    console.log('üöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error)
    console.log('')
    console.log('üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:')
    console.log('   1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: npm run dev')
    console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞')
    console.log('   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –±–∞–∑–µ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã')
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testProductsPage()