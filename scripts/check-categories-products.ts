import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkCategoriesAndProducts() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã...')

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await prisma.category.findMany({
      include: {
        products: {
          select: {
            name: true,
            price: true,
            salePrice: true
          }
        }
      }
    })

    console.log('üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã:')
    categories.forEach(category => {
      console.log(`\nüè∑Ô∏è ${category.name}:`)
      if (category.products.length === 0) {
        console.log('  (–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤)')
      } else {
        category.products.forEach(product => {
          const discount = product.salePrice ? ` (—Å–∫–∏–¥–∫–∞: ${product.salePrice} ÷è)` : ''
          console.log(`  - ${product.name}: ${product.price} ÷è${discount}`)
        })
      }
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–∞–º–∏
    console.log('\nüõçÔ∏è –¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–∞–º–∏:')
    const productsWithDiscounts = await prisma.product.findMany({
      where: {
        salePrice: {
          not: null
        }
      },
      include: {
        category: true
      }
    })

    productsWithDiscounts.forEach(product => {
      const discountPercent = Math.round(((product.price - product.salePrice!) / product.price) * 100)
      console.log(`- ${product.name} (${product.category?.name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}): ${product.price} ÷è ‚Üí ${product.salePrice} ÷è (—Å–∫–∏–¥–∫–∞ ${discountPercent}%)`)
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkCategoriesAndProducts()
