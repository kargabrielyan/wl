import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function createManyProducts() {
  try {
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º –º–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...')
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await prisma.category.findMany()
    console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`)
    
    if (categories.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π!')
      return
    }
    
    // –®–∞–±–ª–æ–Ω—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const productTemplates = {
      '’ï÷Ä’∏÷Ä’∏÷Å’∂’•÷Ä': [
        '‘¥’°’Ω’°’Ø’°’∂ ’ï÷Ä’∏÷Ä’∏÷Å', '‘∫’°’¥’°’∂’°’Ø’°’Ø’´÷Å ’ï÷Ä’∏÷Ä’∏÷Å', '‘ø’¨’°’Ω’´’Ø ’ï÷Ä’∏÷Ä’∏÷Å', '’Ñ’∏’§’•’º’∂ ’ï÷Ä’∏÷Ä’∏÷Å',
        '’ì’°’µ’ø’• ’ï÷Ä’∏÷Ä’∏÷Å', '’Ñ’•’ø’°’≤’°’Ø’°’∂ ’ï÷Ä’∏÷Ä’∏÷Å', '‘ø’∏’¥’¢’´’∂’°÷Å’æ’°’Æ ’ï÷Ä’∏÷Ä’∏÷Å', '‘º’µ’∏÷Ç÷Ñ’Ω ’ï÷Ä’∏÷Ä’∏÷Å'
      ],
      '‘ø’°’∞’∏÷Ç’µ÷Ñ': [
        '’Ñ’°’∂’Ø’°’Ø’°’∂ ’Ñ’°’∞’≥’°’Ø', '‘≥÷Ä’°’Ω’•’≤’°’∂', '‘±’©’∏’º', '‘¥’°÷Ä’°’Ø', '‘≥÷Ä’°’§’°÷Ä’°’Ø',
        '‘Ω’°’≤’°’¨’´÷Ñ’∂’•÷Ä’´ ’ä’°’∞’°÷Ä’°’∂', '‘ø’∏’¥’∏’§', '‘≤’°’¶’¥’∏÷Å', '’ç’•’≤’°’∂'
      ],
      '’Ä’°’æ’°÷Ñ’°’Æ’∏÷Ç’∂’•÷Ä': [
        '‘Ω’°’≤’°’¨’´÷Ñ’∂’•÷Ä’´ ’Ä’°’æ’°÷Ñ’°’Æ’∏÷Ç', '‘∂’°÷Ä’£’°÷Å’∂’∏’≤ ’Ä’°’æ’°÷Ñ’°’Æ’∏÷Ç', '‘ø÷Ä’©’°’Ø’°’∂ ’Ä’°’æ’°÷Ñ’°’Æ’∏÷Ç',
        '‘Ω’°’≤’•÷Ä’´ ’Ä’°’æ’°÷Ñ’°’Æ’∏÷Ç', '’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’°’Ø’°’∂ ’Ä’°’æ’°÷Ñ’°’Æ’∏÷Ç', '‘µ÷Ä’°’™’∑’ø’°’Ø’°’∂ ’Ä’°’æ’°÷Ñ’°’Æ’∏÷Ç'
      ],
      '’î’∏’≤’•÷Ä': [
        '’Ñ’°’∂’Ø’°’Ø’°’∂ ’î’∏’≤’•÷Ä', '‘≥’∏÷Ç’∂’°’æ’∏÷Ä ’î’∏’≤’•÷Ä', '‘¥’´’¶’°’µ’∂’•÷Ä’°’Ø’°’∂ ’î’∏’≤’•÷Ä',
        '‘±’∂’©’°÷É’°’∂÷Å ’î’∏’≤’•÷Ä', '‘π’•’©÷á ’î’∏’≤’•÷Ä', '‘≥’´’∑’•÷Ä’°’µ’´’∂ ’î’∏’≤’•÷Ä'
      ],
      '’Ä’µ’∏÷Ç’Ω’•÷Ä': [
        '‘∂’°÷Ä’£’°÷Å’∂’∏’≤ ’Ä’µ’∏÷Ç’Ω’•÷Ä', '‘≥’∏÷Ç’∂’°’æ’∏÷Ä ’Ä’µ’∏÷Ç’Ω’•÷Ä', '‘Ω’°’≤’°’¨’´÷Ñ’∂’•÷Ä’´ ’Ä’µ’∏÷Ç’Ω’•÷Ä',
        '‘ø÷Ä’©’°’Ø’°’∂ ’Ä’µ’∏÷Ç’Ω’•÷Ä', '’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’°’Ø’°’∂ ’Ä’µ’∏÷Ç’Ω’•÷Ä', '‘≤’°’¶’¥’°’£’∏÷Ç’µ’∂ ’Ä’µ’∏÷Ç’Ω’•÷Ä'
      ],
      '‘µ÷Ä’°’™’∑’ø’°’Ø’°’∂ ‘Ω’°’≤’°’¨’´÷Ñ’∂’•÷Ä': [
        '‘µ÷Ä’°’™’∑’ø’°’Ø’°’∂ ‘Ω’°’≤’°’¨’´÷Ñ', '‘¥’°’∑’∂’°’¥’∏÷Ç÷Ä', '‘µ÷Ä’£’•’∞’∏’∂', '‘ø’´’©’°’º',
        '‘π’¥’¢’∏÷Ç’Ø', '’ñ’¨’•’µ’ø’°', '‘µ÷Ä’°’™’∑’ø’°’Ø’°’∂ ’Ä’°’æ’°÷Ñ’°’Æ’∏÷Ç', '‘µ÷Ä’°’™’∑’ø’°’Ø’°’∂ ‘≥’∏÷Ä’Æ’´÷Ñ’∂’•÷Ä'
      ],
      '‘±’∂’Ø’∏’≤’∂’°’µ’´’∂ ’ä’°÷Ä’°’£’°’∂’•÷Ä': [
        '‘±’∂’Ø’∏’≤’∂’°’µ’´’∂ ’ä’°÷Ä’°’£’°’∂’•÷Ä', '‘≤’°÷Ä’±’•÷Ä', '’Ü’•÷Ä÷Ñ’∂’°’Ø’∂’•÷Ä', '’ä’°÷Ä’Ω’•’ø’∂’•÷Ä',
        '‘æ’°’Æ’Ø’∏÷Å’∂’•÷Ä', '‘≤’°÷Ä’±’´ ‘µ÷Ä’•’Ω’∂’•÷Ä', '‘±’∂’Ø’∏’≤’∂’°’µ’´’∂ ’Ä’°’æ’°÷Ñ’°’Æ’∏÷Ç'
      ],
      '’Ñ’°’∂’Ø’°’Ø’°’∂ ’ç’•’∂’µ’°’Ø’´ ‘¥’•’Ø’∏÷Ä’∂’•÷Ä': [
        '‘¥’•’Ø’∏÷Ä’°’ø’´’æ ‘∑’¨’•’¥’•’∂’ø’∂’•÷Ä', '’ä’°’Ω’ø’°’º’∂’•÷Ä', '’Ü’Ø’°÷Ä’∂’•÷Ä', '‘º’∏÷Ç’Ω’°’¥÷É’∏÷É’∂’•÷Ä',
        '‘ø’°’≠’∏’æ’´ ‘∑’¨’•’¥’•’∂’ø’∂’•÷Ä', '’ç’ø’°’ø’∏÷Ç’•’ø’∂’•÷Ä', '‘¥’•’Ø’∏÷Ä’°’ø’´’æ ’î’°’º’°’Ø’∏÷Ç’Ω’´’∂’•÷Ä'
      ],
      '’Ü’•÷Ä÷Ñ’∂’°’Ø’∂’•÷Ä': [
        '’Ñ’°’∂’Ø’°’Ø’°’∂ ’Ü’•÷Ä÷Ñ’∂’°’Ø', '‘≤’°÷Ä’±÷Ä’∏÷Ä’°’Ø ’Ü’•÷Ä÷Ñ’∂’°’Ø', '‘±’∂’æ’ø’°’∂’£ ’Ü’•÷Ä÷Ñ’∂’°’Ø',
        '’ï÷Ä’©’∏’∫’•’§’´’Ø ’Ü’•÷Ä÷Ñ’∂’°’Ø', '‘ø’∏’∑’ø ’Ü’•÷Ä÷Ñ’∂’°’Ø', '’ì’°÷É’∏÷Ç’Ø ’Ü’•÷Ä÷Ñ’∂’°’Ø'
      ]
    }
    
    const statuses = ['NEW', 'HIT', 'CLASSIC', 'BANNER']
    let createdCount = 0
    const targetCount = 580
    
    console.log(`üéØ –¶–µ–ª—å: —Å–æ–∑–¥–∞—Ç—å ${targetCount} –ø—Ä–æ–¥—É–∫—Ç–æ–≤`)
    
    for (const category of categories) {
      const templates = productTemplates[category.name as keyof typeof productTemplates] || []
      
      // –°–æ–∑–¥–∞–µ–º –ø–æ 60-70 –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const productsPerCategory = Math.ceil(targetCount / categories.length)
      
      for (let i = 0; i < productsPerCategory; i++) {
        if (createdCount >= targetCount) break
        
        const templateIndex = i % templates.length
        const template = templates[templateIndex] || `${category.name} ${i + 1}`
        
        const productName = templates.length > 0 
          ? `${template} ${Math.floor(i / templates.length) + 1}`
          : `${category.name} ${i + 1}`
        
        const basePrice = 5000 + Math.random() * 45000 // 5000-50000
        const hasSale = Math.random() > 0.7 // 30% —à–∞–Ω—Å —Å–∫–∏–¥–∫–∏
        const salePrice = hasSale ? basePrice * 0.8 : null
        
        const status = statuses[Math.floor(Math.random() * statuses.length)]
        const stock = Math.floor(Math.random() * 20) + 5 // 5-25 —à—Ç—É–∫
        
        await prisma.product.create({
          data: {
            name: productName,
            description: `${productName} - ’¢’°÷Ä’±÷Ä’∏÷Ä’°’Ø ’°÷Ä’ø’°’§÷Ä’°’∂÷Ñ ’•÷Ä’•’≠’°’∂’•÷Ä’´ ’∞’°’¥’°÷Ä`,
            price: Math.round(basePrice),
            salePrice: salePrice ? Math.round(salePrice) : null,
            image: '/images/nophoto.jpg',
            categoryId: category.id,
            status: status as any,
            stock: stock,
            ingredients: '‘±’∂’æ’ø’°’∂’£ ’∂’µ’∏÷Ç’©’•÷Ä, ’¢’°÷Ä’±÷Ä ’∏÷Ä’°’Ø'
          }
        })
        
        createdCount++
        
        if (createdCount % 50 === 0) {
          console.log(`üìä –°–æ–∑–¥–∞–Ω–æ ${createdCount} –ø—Ä–æ–¥—É–∫—Ç–æ–≤...`)
        }
      }
      
      console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${category.name}": —Å–æ–∑–¥–∞–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤`)
    }
    
    console.log(`\nüéâ –°–æ–∑–¥–∞–Ω–æ ${createdCount} –ø—Ä–æ–¥—É–∫—Ç–æ–≤!`)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalProducts = await prisma.product.count()
    const productsByStatus = await prisma.product.groupBy({
      by: ['status'],
      _count: {
        id: true
      }
    })
    
    console.log(`\nüìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –±–∞–∑–µ: ${totalProducts}`)
    console.log('\nüìã –ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:')
    productsByStatus.forEach(group => {
      console.log(`  ${group.status}: ${group._count.id} –ø—Ä–æ–¥—É–∫—Ç–æ–≤`)
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createManyProducts()
