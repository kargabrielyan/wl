import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkSpecificProduct() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä "–ö–Ω–∏–≥–∞ —Å–∫–∞–∑–æ–∫"...')

    // –ò—â–µ–º —Ç–æ–≤–∞—Ä "–ö–Ω–∏–≥–∞ —Å–∫–∞–∑–æ–∫"
    const product = await prisma.product.findFirst({
      where: {
        name: {
          contains: '–ö–Ω–∏–≥–∞ —Å–∫–∞–∑–æ–∫'
        }
      },
      include: {
        category: true
      }
    })

    if (product) {
      console.log('üì¶ –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä:')
      console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${product.name}`)
      console.log(`  –û–±—ã—á–Ω–∞—è —Ü–µ–Ω–∞: ${product.price} ÷è`)
      console.log(`  –¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π: ${product.salePrice || '–ù–µ—Ç —Å–∫–∏–¥–∫–∏'} ÷è`)
      console.log(`  –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category?.name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}`)
      
      if (product.salePrice) {
        const discountPercent = Math.round(((product.price - product.salePrice) / product.price) * 100)
        console.log(`  –°–∫–∏–¥–∫–∞: ${discountPercent}%`)
      }
    } else {
      console.log('‚ùå –¢–æ–≤–∞—Ä "–ö–Ω–∏–≥–∞ —Å–∫–∞–∑–æ–∫" –Ω–µ –Ω–∞–π–¥–µ–Ω')
    }

    // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å —Ü–µ–Ω–æ–π 900 ÷è
    console.log('\nüîç –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å —Ü–µ–Ω–æ–π 900 ÷è:')
    const products900 = await prisma.product.findMany({
      where: {
        price: 900
      },
      include: {
        category: true
      }
    })

    products900.forEach(product => {
      console.log(`  - ${product.name} (${product.category?.name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'})`)
      console.log(`    –û–±—ã—á–Ω–∞—è —Ü–µ–Ω–∞: ${product.price} ÷è`)
      console.log(`    –¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π: ${product.salePrice || '–ù–µ—Ç —Å–∫–∏–¥–∫–∏'} ÷è`)
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–≤–∞—Ä–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkSpecificProduct()
