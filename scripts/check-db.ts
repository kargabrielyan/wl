import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkDatabase() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
    
    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    await prisma.$connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü–µ
    const stats = {
      categories: await prisma.category.count(),
      products: await prisma.product.count(),
      users: await prisma.user.count(),
      orders: await prisma.order.count(),
      orderItems: await prisma.orderItem.count(),
      wishlist: await prisma.wishlist.count(),
      deliveryTypes: await prisma.deliveryType.count(),
      settings: await prisma.settings.count()
    }

    console.log('\nüìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:')
    console.log(`–ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${stats.categories}`)
    console.log(`–ü—Ä–æ–¥—É–∫—Ç—ã: ${stats.products}`)
    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${stats.users}`)
    console.log(`–ó–∞–∫–∞–∑—ã: ${stats.orders}`)
    console.log(`–ü–æ–∑–∏—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤: ${stats.orderItems}`)
    console.log(`–ò–∑–±—Ä–∞–Ω–Ω–æ–µ: ${stats.wishlist}`)
    console.log(`–¢–∏–ø—ã –¥–æ—Å—Ç–∞–≤–∫–∏: ${stats.deliveryTypes}`)
    console.log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∏: ${stats.settings}`)

    if (stats.categories === 0) {
      console.log('\n‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞. –ù—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–º–∏.')
    } else {
      console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ.')
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkDatabase()

