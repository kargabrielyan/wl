import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function setStockTo10() {
  try {
    console.log('üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏ –Ω–∞ 10 —à—Ç—É–∫...')

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    const products = await prisma.product.findMany()
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤`)

    // –û–±–Ω–æ–≤–ª—è–µ–º stock –¥–ª—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ 10
    const result = await prisma.product.updateMany({
      data: {
        stock: 10
      }
    })

    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${result.count} —Ç–æ–≤–∞—Ä–æ–≤`)

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = await prisma.product.groupBy({
      by: ['stock'],
      _count: {
        stock: true
      },
      orderBy: {
        stock: 'asc'
      }
    })

    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤ –Ω–∞–ª–∏—á–∏–∏:')
    stats.forEach(stat => {
      console.log(`  ${stat.stock} —à—Ç—É–∫: ${stat._count.stock} —Ç–æ–≤–∞—Ä–æ–≤`)
    })

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    const sampleProducts = await prisma.product.findMany({
      take: 5,
      select: {
        name: true,
        stock: true,
        price: true
      }
    })

    console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:')
    sampleProducts.forEach(product => {
      console.log(`  ${product.name}: ${product.stock} —à—Ç—É–∫, ${product.price} ÷è`)
    })

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

setStockTo10()
