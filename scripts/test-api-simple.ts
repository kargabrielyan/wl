#!/usr/bin/env tsx

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API
 */

const API_BASE_URL = 'http://localhost:3000/api'

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...\n')

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    console.log('üì° –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API')
    const response = await fetch(`${API_BASE_URL}/products`)
    
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å: ${response.status}`)
    console.log(`‚úÖ OK: ${response.ok}`)
    
    if (!response.ok) {
      const errorText = await response.text()
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${errorText}`)
      return
    }
    
    const data = await response.json()
    console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:`, {
      hasItems: !!data.items,
      hasData: !!data.data,
      itemsLength: data.items?.length || 0,
      dataLength: data.data?.length || 0
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error)
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  testAPI()
}

export { testAPI }
