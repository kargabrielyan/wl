import { PrismaClient } from '@prisma/client'

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è SQLite
process.env.DATABASE_URL = 'file:./prisma/dev.db'

const prisma = new PrismaClient()

async function main() {
  try {
    console.log('üß∏ –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –¥–µ—Ç—Å–∫–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞...')
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = [
      { name: '–ò–≥—Ä—É—à–∫–∏', description: '–î–µ—Ç—Å–∫–∏–µ –∏–≥—Ä—É—à–∫–∏ –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤' },
      { name: '–û–¥–µ–∂–¥–∞', description: '–î–µ—Ç—Å–∫–∞—è –æ–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å' },
      { name: '–ö–Ω–∏–≥–∏', description: '–î–µ—Ç—Å–∫–∏–µ –∫–Ω–∏–≥–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—é—â–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞' },
      { name: '–°–ø–æ—Ä—Ç', description: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π' },
      { name: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', description: '–¢–æ–≤–∞—Ä—ã –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ —Ä—É–∫–æ–¥–µ–ª–∏—è' }
    ]

    const categoryMap = new Map()
    
    for (const categoryData of categories) {
      let category = await prisma.category.findUnique({
        where: { name: categoryData.name }
      })
      
      if (!category) {
        category = await prisma.category.create({
          data: {
            name: categoryData.name,
            description: categoryData.description,
            isActive: true
          }
        })
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${category.name}`)
      } else {
        console.log(`‚ÑπÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${category.name}`)
      }
      
      categoryMap.set(categoryData.name, category.id)
    }

    // –¢–æ–≤–∞—Ä—ã –¥–µ—Ç—Å–∫–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
    const products = [
      {
        name: '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä LEGO Classic',
        description: '–ë–æ–ª—å—à–æ–π –Ω–∞–±–æ—Ä –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è –º–µ–ª–∫–æ–π –º–æ—Ç–æ—Ä–∏–∫–∏. 1500 –¥–µ—Ç–∞–ª–µ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –∏ —Ñ–æ—Ä–º.',
        price: 2500,
        image: '/images/lego-constructor.jpg',
        category: '–ò–≥—Ä—É—à–∫–∏',
        ingredients: '–ü–ª–∞—Å—Ç–∏–∫, –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
        isAvailable: true,
        status: 'HIT'
      },
      {
        name: '–ú—è–≥–∫–∞—è –∏–≥—Ä—É—à–∫–∞ –ú–∏—à–∫–∞ –¢–µ–¥–¥–∏',
        description: '–ú—è–≥–∫–∏–π –∏ –ø—É—à–∏—Å—Ç—ã–π –º–∏—à–∫–∞, –ª—É—á—à–∏–π –¥—Ä—É–≥ –¥–ª—è –≤–∞—à–µ–≥–æ –º–∞–ª—ã—à–∞. –í—ã—Å–æ—Ç–∞ 30 —Å–º.',
        price: 1200,
        image: '/images/teddy-bear.jpg',
        category: '–ò–≥—Ä—É—à–∫–∏',
        ingredients: '–ü–ª—é—à, –°–∏–Ω—Ç–µ–ø–æ–Ω, –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
        isAvailable: true,
        status: 'HIT'
      },
      {
        name: '–î–µ—Ç—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ —Å –ø—Ä–∏–Ω—Ç–æ–º',
        description: '–Ø—Ä–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ –∏–∑ 100% —Ö–ª–æ–ø–∫–∞ —Å –≤–µ—Å–µ–ª—ã–º –ø—Ä–∏–Ω—Ç–æ–º. –†–∞–∑–º–µ—Ä—ã –æ—Ç 2 –¥–æ 12 –ª–µ—Ç.',
        price: 800,
        image: '/images/kids-tshirt.jpg',
        category: '–û–¥–µ–∂–¥–∞',
        ingredients: '100% —Ö–ª–æ–ø–æ–∫, –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫—Ä–∞—Å–∏—Ç–µ–ª–∏',
        isAvailable: true,
        status: 'REGULAR'
      },
      {
        name: '–ö–Ω–∏–≥–∞ —Å–∫–∞–∑–æ–∫',
        description: '–°–±–æ—Ä–Ω–∏–∫ –ª—é–±–∏–º—ã—Ö —Å–∫–∞–∑–æ–∫ —Å —è—Ä–∫–∏–º–∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏. –¢–≤–µ—Ä–¥—ã–π –ø–µ—Ä–µ–ø–ª–µ—Ç, 200 —Å—Ç—Ä–∞–Ω–∏—Ü.',
        price: 900,
        image: '/images/fairy-tales-book.jpg',
        category: '–ö–Ω–∏–≥–∏',
        ingredients: '–ë—É–º–∞–≥–∞, –ö–∞—Ä—Ç–æ–Ω, –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫—Ä–∞—Å–∫–∏',
        isAvailable: true,
        status: 'CLASSIC'
      },
      {
        name: '–î–µ—Ç—Å–∫–∏–π –≤–µ–ª–æ—Å–∏–ø–µ–¥',
        description: '–õ–µ–≥–∫–∏–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤–µ–ª–æ—Å–∏–ø–µ–¥ –¥–ª—è –¥–µ—Ç–µ–π –æ—Ç 3 –¥–æ 6 –ª–µ—Ç. –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∫–æ–ª–µ—Å–∞–º–∏.',
        price: 7000,
        image: '/images/kids-bike.jpg',
        category: '–°–ø–æ—Ä—Ç',
        ingredients: '–ê–ª—é–º–∏–Ω–∏–π, –†–µ–∑–∏–Ω–∞, –ü–ª–∞—Å—Ç–∏–∫',
        isAvailable: true,
        status: 'HIT'
      },
      {
        name: '–ù–∞–±–æ—Ä –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è',
        description: '–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è —é–Ω–æ–≥–æ —Ö—É–¥–æ–∂–Ω–∏–∫–∞: –∫—Ä–∞—Å–∫–∏, –∫–∏—Å—Ç–∏, –∞–ª—å–±–æ–º, –∫–∞—Ä–∞–Ω–¥–∞—à–∏.',
        price: 1500,
        image: '/images/art-set.jpg',
        category: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
        ingredients: '–ö—Ä–∞—Å–∫–∏ –Ω–∞ –≤–æ–¥–Ω–æ–π –æ—Å–Ω–æ–≤–µ, –ö–∏—Å—Ç–∏, –ë—É–º–∞–≥–∞, –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
        isAvailable: true,
        status: 'HIT'
      }
    ]

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã
    for (const productData of products) {
      const categoryId = categoryMap.get(productData.category)
      if (!categoryId) {
        console.log(`‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞: ${productData.name}`)
        continue
      }

      const product = await prisma.product.create({
        data: {
          name: productData.name,
          description: productData.description,
          price: productData.price,
          image: productData.image,
          categoryId: categoryId,
          ingredients: productData.ingredients,
          isAvailable: productData.isAvailable,
          status: productData.status
        }
      })
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: ${product.name} (${productData.category})`)
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalProducts = await prisma.product.count()
    const totalCategories = await prisma.category.count()
    
    console.log('\nüéâ –¢–æ–≤–∞—Ä—ã –¥–µ—Ç—Å–∫–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`)
    console.log(`   - –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProducts}`)
    console.log(`   - –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${totalCategories}`)
    console.log(`   - –î–æ–±–∞–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${products.length}`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

main()
