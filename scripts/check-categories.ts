import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkCategories() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
    
    const categories = await prisma.category.findMany({
      where: {
        isActive: true
      },
      orderBy: [
        { sortOrder: 'asc' },
        { createdAt: 'asc' }
      ],
      select: {
        id: true,
        name: true,
        description: true,
        image: true,
        sortOrder: true,
        showInMainPage: true,
        isActive: true,
        createdAt: true
      }
    })

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`)
    
    if (categories.length > 0) {
      console.log('\nüìã –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:')
      categories.forEach((category, index) => {
        console.log(`${index + 1}. ${category.name} (ID: ${category.id})`)
        console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${category.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`)
        console.log(`   –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π: ${category.showInMainPage ? '–î–∞' : '–ù–µ—Ç'}`)
        console.log(`   –ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: ${category.sortOrder}`)
        console.log(`   –ê–∫—Ç–∏–≤–Ω–∞: ${category.isActive ? '–î–∞' : '–ù–µ—Ç'}`)
        console.log('')
      })
    } else {
      console.log('‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!')
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkCategories()