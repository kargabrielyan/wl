import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function testCategories() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
    
    const categories = await prisma.category.findMany({
      orderBy: { sortOrder: 'asc' }
    })
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`)
    console.log('\nüìã –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:')
    
    categories.forEach((cat, index) => {
      console.log(`${index + 1}. ${cat.name}`)
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${cat.description}`)
      console.log(`   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${cat.image}`)
      console.log(`   –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π: ${cat.showInMainPage ? '–î–∞' : '–ù–µ—Ç'}`)
      console.log(`   –ê–∫—Ç–∏–≤–Ω–∞: ${cat.isActive ? '–î–∞' : '–ù–µ—Ç'}`)
      console.log('')
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error)
  } finally {
    await prisma.$disconnect()
  }
}

testCategories()
